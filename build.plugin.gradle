/**
 * - - - - thoughtfully generated by synapticloop gradle-plugin-java-create - - - - 
 *            with the use of synapticloop templar templating language
 *                      (build.plugin.gradle.templar)
 */

buildscript {
	repositories {
		mavenLocal()
		maven {
			url "https://plugins.gradle.org/"
		}
	}

	dependencies {
		classpath 'synapticloop:TestSample:0.0.1'
	}
}

// list all of the plugins for this project
plugins {
	id 'java'
	id 'maven'
	id 'maven-publish'

	id 'com.gradle.plugin-publish' version '0.9.7'
}

apply plugin: 'synapticloop.testSample'

// textual information for this project
group = 'synapticloop'
archivesBaseName = 'TestSample'
description = """a simple test plugin"""

version = '0.0.1'

// __WARN__ if you want the source and target compatability to be another version 
// of java - you will also need to change the links to the javadoc locations
sourceCompatibility = 1.7
targetCompatibility = 1.7


// all of the repositories that this project will use
repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
}

// now for all of the dependencies
dependencies {

	compile gradleApi()
}

// we always want to fail on version conflict
configurations.all {
	resolutionStrategy {
		failOnVersionConflict()
	}
}

/**
 * Here are the configuration elements for the javaSample task
 */

testSample {
	// At this point - this is how you set or over-ride variables for the plugin.
	// Note that these must have both a setter and getter in the PluginExtension.java 	// class
	booleanValue = true
	stringValue = "this is a string value set from the build.plugin.gradle file"
	stringList = [ "one", "two", "three" ]
}

// __WARN__ if you have changed the source and target compatability to be another 
// version of java - you will also need to change the links below
def javaApiUrl = 'http://docs.oracle.com/javase/7/docs/api/'
def groovyApiUrl = 'http://groovy.codehaus.org/gapi/'

tasks.withType(Javadoc) {
	options.links(javaApiUrl, groovyApiUrl)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

// Now it is time to publish the plugin
pluginBundle {
	// __WARN__ ensure that the following links are actually set correctly 
	website = 'https://github.com/synapticloop/TestSample'
	vcsUrl = 'https://github.com/synapticloop/TestSample'
	description = 'a simple test plugin'
	tags = [ "test", "sample" ]

	plugins {
		TestSample {
			id = 'synapticloop.TestSample'
			displayName = 'Synapticloop sample test plugin'
		}
	}
}

