plugins {
	id 'java'
	id 'eclipse'
	id "maven"
	id "maven-publish"

	id "com.jfrog.bintray" version "1.6"
	id 'co.riiid.gradle' version '0.4.2'

	id 'synapticloop.documentr' version '2.6.1'
	id 'synapticloop.copyrightr' version '1.1.2'
}

group = 'synapticloop'
archivesBaseName = 'gradle-plugin-java-create'
description = """Easy generation of a gradle plugin in java"""

version = '0.0.1'

sourceCompatibility = 1.7
targetCompatibility = 1.7



repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
}

dependencies {
	runtime 'synapticloop:templar:1.3.0'
	runtime 'commons-cli:commons-cli:1.3.1'
	runtime 'synapticloop:simplelogger:1.1.1'

	compile 'synapticloop:templar:1.3.0'
	compile 'commons-cli:commons-cli:1.3.1'
	compile 'synapticloop:simplelogger:1.1.1'

	compile gradleApi()
}

configurations.all {
	resolutionStrategy {
		failOnVersionConflict()
		force 'junit:junit:4.11'
	}
}

copyrightr {
	dryRun = false
	copyrightHolder = "Synapticloop"

	includes = [ 
		"**/*.java"
	]

	excludes = [ "**/*.class" ]

	yearSeparator = " - "

	failOnMissing = false
}

def locateJar(lib) {
	configurations.runtime.findAll {it.getName().contains(lib)}.collect { it.isDirectory() ? it : zipTree(it) }
}

task fatJar(type: Jar) {
	classifier = 'all'

	manifest {
		attributes("Main-Class": "synapticloop.gradle.plugin.create.Main")
	}

	from { locateJar('simplelogger') } { include "**" }
	from { locateJar('templar') } { include "**" }
	from { locateJar('commons-cli') } { include "**" }
	from { locateJar('json') } { include "**" }

	from(sourceSets.main.output) { include "**" }
}

build.finalizedBy(project.tasks.fatJar)


/*
 *
 * Publish to bintray
 *
 */


def javaApiUrl = 'http://docs.oracle.com/javase/1.7.0/docs/api/'
def groovyApiUrl = 'http://groovy.codehaus.org/gapi/'

tasks.withType(Javadoc) {
	options.links(javaApiUrl, groovyApiUrl)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

publishing {
	publications {
		Synapticloop(MavenPublication) {
			from components.java
			artifact sourcesJar
			artifact javadocJar

			groupId 'synapticloop'
			artifactId 'gradle-plugin-java-create'

			pom.withXml {
				configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each { dep ->
					asNode().dependencies[0].dependency.find {
						it.artifactId[0].text() == dep.moduleName &&
								it.groupId[0].text() == dep.moduleGroup
					}.scope[0].value = 'compile'
				}
			}
		}
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_PASSWORD')

	publications = [ 'Synapticloop' ]

	publish = true

	pkg {
		repo = 'maven'
		name = 'gradle-plugin-java-create'
	}

}

github {
	owner = group
	repo = 'synapticloopltd'
	if(System.getenv('GITHUB_TOKEN')) {
		token = System.getenv('GITHUB_TOKEN')
	}
	tagName = version
	name = version
	assets = [
		'build/libs/' + archivesBaseName + '-' + version + '.jar'
	]
}
